version: "3.3"

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  front-tier:
  back-tier:

services:
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: "db"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - .data:/var/lib/mysql

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  # prometheus:
  #   image: prom/prometheus:v2.1.0
  #   volumes:
  #     - ./config/prometheus/:/etc/prometheus/
  #     - prometheus_data:/prometheus
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #     - "--storage.tsdb.path=/prometheus"
  #     - "--web.console.libraries=/usr/share/prometheus/console_libraries"
  #     - "--web.console.templates=/usr/share/prometheus/consoles"
  #   ports:
  #     - 9090:9090
  #   links:
  #     - cadvisor:cadvisor
  #     - alertmanager:alertmanager
  #   depends_on:
  #     - cadvisor
  #   networks:
  #     - back-tier
  #   restart: always
  # #    deploy:
  # #      placement:
  # #        constraints:
  # #          - node.hostname == ${HOSTNAME}

  # pushgateway:
  #   image: prom/pushgateway
  #   ports:
  #     - 9091:9091

  # node-exporter:
  #   image: prom/node-exporter
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - "--path.procfs=/host/proc"
  #     - "--path.sysfs=/host/sys"
  #     - --collector.filesystem.ignored-mount-points
  #     - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  #   ports:
  #     - 9100:9100
  #   networks:
  #     - back-tier
  #   restart: always

  # alertmanager:
  #   image: prom/alertmanager
  #   ports:
  #     - 9093:9093
  #   volumes:
  #     - ./config/alertmanager/:/etc/alertmanager/
  #   networks:
  #     - back-tier
  #   restart: always
  #   command:
  #     - "--config.file=/etc/alertmanager/config.yml"
  #     - "--storage.path=/alertmanager"
  # #    deploy:
  # #      placement:
  # #        constraints:
  # #          - node.hostname == ${HOSTNAME}
  # cadvisor:
  #   image: google/cadvisor
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - back-tier
  #   restart: always

  # grafana:
  #   image: grafana/grafana
  #   user: "104"
  #   depends_on:
  #     - prometheus
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./config/grafana/provisioning/:/etc/grafana/provisioning/
  #   env_file:
  #     - ./config/grafana/config.monitoring
  #   networks:
  #     - back-tier
  #     - front-tier
  #   restart: always
