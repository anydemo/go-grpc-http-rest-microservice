// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Task we have to do
type Blog struct {
	// Unique string identifier of the blog
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Title of the blog
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// Detail description of the blog
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Creator
	CreatorId string `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// createdAt
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Blog) Reset()         { *m = Blog{} }
func (m *Blog) String() string { return proto.CompactTextString(m) }
func (*Blog) ProtoMessage()    {}
func (*Blog) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Blog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blog.Unmarshal(m, b)
}
func (m *Blog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blog.Marshal(b, m, deterministic)
}
func (m *Blog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blog.Merge(m, src)
}
func (m *Blog) XXX_Size() int {
	return xxx_messageInfo_Blog.Size(m)
}
func (m *Blog) XXX_DiscardUnknown() {
	xxx_messageInfo_Blog.DiscardUnknown(m)
}

var xxx_messageInfo_Blog proto.InternalMessageInfo

func (m *Blog) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Blog) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Blog) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Blog) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *Blog) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

// Request data to create new blog
type CreateBlogRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity to add
	Blog                 *Blog    `protobuf:"bytes,2,opt,name=blog,proto3" json:"blog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBlogRequest) Reset()         { *m = CreateBlogRequest{} }
func (m *CreateBlogRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBlogRequest) ProtoMessage()    {}
func (*CreateBlogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *CreateBlogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBlogRequest.Unmarshal(m, b)
}
func (m *CreateBlogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBlogRequest.Marshal(b, m, deterministic)
}
func (m *CreateBlogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBlogRequest.Merge(m, src)
}
func (m *CreateBlogRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBlogRequest.Size(m)
}
func (m *CreateBlogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBlogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBlogRequest proto.InternalMessageInfo

func (m *CreateBlogRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateBlogRequest) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

// Contains data of created blog
type CreateBlogResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// ID of created task
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBlogResponse) Reset()         { *m = CreateBlogResponse{} }
func (m *CreateBlogResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBlogResponse) ProtoMessage()    {}
func (*CreateBlogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *CreateBlogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBlogResponse.Unmarshal(m, b)
}
func (m *CreateBlogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBlogResponse.Marshal(b, m, deterministic)
}
func (m *CreateBlogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBlogResponse.Merge(m, src)
}
func (m *CreateBlogResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBlogResponse.Size(m)
}
func (m *CreateBlogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBlogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBlogResponse proto.InternalMessageInfo

func (m *CreateBlogResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateBlogResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Request data to read blog
type ReadBlogRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique string identifier of the blog
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadBlogRequest) Reset()         { *m = ReadBlogRequest{} }
func (m *ReadBlogRequest) String() string { return proto.CompactTextString(m) }
func (*ReadBlogRequest) ProtoMessage()    {}
func (*ReadBlogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *ReadBlogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadBlogRequest.Unmarshal(m, b)
}
func (m *ReadBlogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadBlogRequest.Marshal(b, m, deterministic)
}
func (m *ReadBlogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadBlogRequest.Merge(m, src)
}
func (m *ReadBlogRequest) XXX_Size() int {
	return xxx_messageInfo_ReadBlogRequest.Size(m)
}
func (m *ReadBlogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadBlogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadBlogRequest proto.InternalMessageInfo

func (m *ReadBlogRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadBlogRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Contains blog data specified in by ID request
type ReadBlogResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity read by ID
	Blogs                *Blog    `protobuf:"bytes,2,opt,name=blogs,proto3" json:"blogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadBlogResponse) Reset()         { *m = ReadBlogResponse{} }
func (m *ReadBlogResponse) String() string { return proto.CompactTextString(m) }
func (*ReadBlogResponse) ProtoMessage()    {}
func (*ReadBlogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *ReadBlogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadBlogResponse.Unmarshal(m, b)
}
func (m *ReadBlogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadBlogResponse.Marshal(b, m, deterministic)
}
func (m *ReadBlogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadBlogResponse.Merge(m, src)
}
func (m *ReadBlogResponse) XXX_Size() int {
	return xxx_messageInfo_ReadBlogResponse.Size(m)
}
func (m *ReadBlogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadBlogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadBlogResponse proto.InternalMessageInfo

func (m *ReadBlogResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadBlogResponse) GetBlogs() *Blog {
	if m != nil {
		return m.Blogs
	}
	return nil
}

// Request data to delete blog
type DeleteBlogRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique string identifier of the blog to delete
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBlogRequest) Reset()         { *m = DeleteBlogRequest{} }
func (m *DeleteBlogRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBlogRequest) ProtoMessage()    {}
func (*DeleteBlogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *DeleteBlogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBlogRequest.Unmarshal(m, b)
}
func (m *DeleteBlogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBlogRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBlogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBlogRequest.Merge(m, src)
}
func (m *DeleteBlogRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBlogRequest.Size(m)
}
func (m *DeleteBlogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBlogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBlogRequest proto.InternalMessageInfo

func (m *DeleteBlogRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteBlogRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Contains status of delete operation
type DeleteBlogResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have beed deleted
	// Equals 1 in case of succesfull delete
	Deleted              int64    `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBlogResponse) Reset()         { *m = DeleteBlogResponse{} }
func (m *DeleteBlogResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteBlogResponse) ProtoMessage()    {}
func (*DeleteBlogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *DeleteBlogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBlogResponse.Unmarshal(m, b)
}
func (m *DeleteBlogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBlogResponse.Marshal(b, m, deterministic)
}
func (m *DeleteBlogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBlogResponse.Merge(m, src)
}
func (m *DeleteBlogResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteBlogResponse.Size(m)
}
func (m *DeleteBlogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBlogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBlogResponse proto.InternalMessageInfo

func (m *DeleteBlogResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteBlogResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

// Request data to read all blog
type ReadAllBlogRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllBlogRequest) Reset()         { *m = ReadAllBlogRequest{} }
func (m *ReadAllBlogRequest) String() string { return proto.CompactTextString(m) }
func (*ReadAllBlogRequest) ProtoMessage()    {}
func (*ReadAllBlogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *ReadAllBlogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllBlogRequest.Unmarshal(m, b)
}
func (m *ReadAllBlogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllBlogRequest.Marshal(b, m, deterministic)
}
func (m *ReadAllBlogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllBlogRequest.Merge(m, src)
}
func (m *ReadAllBlogRequest) XXX_Size() int {
	return xxx_messageInfo_ReadAllBlogRequest.Size(m)
}
func (m *ReadAllBlogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllBlogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllBlogRequest proto.InternalMessageInfo

func (m *ReadAllBlogRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

// Contains list of all blog
type ReadAllBlogResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// List of all blog
	Blogs                []*Blog  `protobuf:"bytes,2,rep,name=blogs,proto3" json:"blogs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllBlogResponse) Reset()         { *m = ReadAllBlogResponse{} }
func (m *ReadAllBlogResponse) String() string { return proto.CompactTextString(m) }
func (*ReadAllBlogResponse) ProtoMessage()    {}
func (*ReadAllBlogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *ReadAllBlogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllBlogResponse.Unmarshal(m, b)
}
func (m *ReadAllBlogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllBlogResponse.Marshal(b, m, deterministic)
}
func (m *ReadAllBlogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllBlogResponse.Merge(m, src)
}
func (m *ReadAllBlogResponse) XXX_Size() int {
	return xxx_messageInfo_ReadAllBlogResponse.Size(m)
}
func (m *ReadAllBlogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllBlogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllBlogResponse proto.InternalMessageInfo

func (m *ReadAllBlogResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadAllBlogResponse) GetBlogs() []*Blog {
	if m != nil {
		return m.Blogs
	}
	return nil
}

// Task we have to do
type Comment struct {
	// Unique string identifier of the blog
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// comment content
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// Creator
	CreatorId string `protobuf:"bytes,3,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// createdAt
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Comment) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *Comment) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

// Request data to create new blog
type CreateCommentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Task entity to add
	Comment              *Comment `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommentRequest) Reset()         { *m = CreateCommentRequest{} }
func (m *CreateCommentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCommentRequest) ProtoMessage()    {}
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}

func (m *CreateCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommentRequest.Unmarshal(m, b)
}
func (m *CreateCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommentRequest.Marshal(b, m, deterministic)
}
func (m *CreateCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommentRequest.Merge(m, src)
}
func (m *CreateCommentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCommentRequest.Size(m)
}
func (m *CreateCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommentRequest proto.InternalMessageInfo

func (m *CreateCommentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateCommentRequest) GetComment() *Comment {
	if m != nil {
		return m.Comment
	}
	return nil
}

// Contains data of created blog
type CreateCommentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// ID of created task
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommentResponse) Reset()         { *m = CreateCommentResponse{} }
func (m *CreateCommentResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCommentResponse) ProtoMessage()    {}
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{11}
}

func (m *CreateCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommentResponse.Unmarshal(m, b)
}
func (m *CreateCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommentResponse.Marshal(b, m, deterministic)
}
func (m *CreateCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommentResponse.Merge(m, src)
}
func (m *CreateCommentResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCommentResponse.Size(m)
}
func (m *CreateCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommentResponse proto.InternalMessageInfo

func (m *CreateCommentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateCommentResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Request data to delete comment
type DeleteCommentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Unique string identifier of the comment to delete
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentRequest) Reset()         { *m = DeleteCommentRequest{} }
func (m *DeleteCommentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentRequest) ProtoMessage()    {}
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{12}
}

func (m *DeleteCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentRequest.Unmarshal(m, b)
}
func (m *DeleteCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentRequest.Merge(m, src)
}
func (m *DeleteCommentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentRequest.Size(m)
}
func (m *DeleteCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentRequest proto.InternalMessageInfo

func (m *DeleteCommentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteCommentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Contains status of delete operation
type DeleteCommentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Contains number of entities have beed deleted
	// Equals 1 in case of succesfull delete
	Deleted              int64    `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentResponse) Reset()         { *m = DeleteCommentResponse{} }
func (m *DeleteCommentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentResponse) ProtoMessage()    {}
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{13}
}

func (m *DeleteCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentResponse.Unmarshal(m, b)
}
func (m *DeleteCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentResponse.Merge(m, src)
}
func (m *DeleteCommentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentResponse.Size(m)
}
func (m *DeleteCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentResponse proto.InternalMessageInfo

func (m *DeleteCommentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteCommentResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

// Request data to read all blog
type ReadAllCommentRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	BlogId               string   `protobuf:"bytes,2,opt,name=blog_id,json=blogId,proto3" json:"blog_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAllCommentRequest) Reset()         { *m = ReadAllCommentRequest{} }
func (m *ReadAllCommentRequest) String() string { return proto.CompactTextString(m) }
func (*ReadAllCommentRequest) ProtoMessage()    {}
func (*ReadAllCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{14}
}

func (m *ReadAllCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllCommentRequest.Unmarshal(m, b)
}
func (m *ReadAllCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllCommentRequest.Marshal(b, m, deterministic)
}
func (m *ReadAllCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllCommentRequest.Merge(m, src)
}
func (m *ReadAllCommentRequest) XXX_Size() int {
	return xxx_messageInfo_ReadAllCommentRequest.Size(m)
}
func (m *ReadAllCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllCommentRequest proto.InternalMessageInfo

func (m *ReadAllCommentRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadAllCommentRequest) GetBlogId() string {
	if m != nil {
		return m.BlogId
	}
	return ""
}

// Contains list of all blog
type ReadAllCommentResponse struct {
	// API versioning: it is my best practice to specify version explicitly
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// List of all blog
	Comments             []*Comment `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReadAllCommentResponse) Reset()         { *m = ReadAllCommentResponse{} }
func (m *ReadAllCommentResponse) String() string { return proto.CompactTextString(m) }
func (*ReadAllCommentResponse) ProtoMessage()    {}
func (*ReadAllCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{15}
}

func (m *ReadAllCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAllCommentResponse.Unmarshal(m, b)
}
func (m *ReadAllCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAllCommentResponse.Marshal(b, m, deterministic)
}
func (m *ReadAllCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAllCommentResponse.Merge(m, src)
}
func (m *ReadAllCommentResponse) XXX_Size() int {
	return xxx_messageInfo_ReadAllCommentResponse.Size(m)
}
func (m *ReadAllCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAllCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAllCommentResponse proto.InternalMessageInfo

func (m *ReadAllCommentResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadAllCommentResponse) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func init() {
	proto.RegisterType((*Blog)(nil), "v1.Blog")
	proto.RegisterType((*CreateBlogRequest)(nil), "v1.CreateBlogRequest")
	proto.RegisterType((*CreateBlogResponse)(nil), "v1.CreateBlogResponse")
	proto.RegisterType((*ReadBlogRequest)(nil), "v1.ReadBlogRequest")
	proto.RegisterType((*ReadBlogResponse)(nil), "v1.ReadBlogResponse")
	proto.RegisterType((*DeleteBlogRequest)(nil), "v1.DeleteBlogRequest")
	proto.RegisterType((*DeleteBlogResponse)(nil), "v1.DeleteBlogResponse")
	proto.RegisterType((*ReadAllBlogRequest)(nil), "v1.ReadAllBlogRequest")
	proto.RegisterType((*ReadAllBlogResponse)(nil), "v1.ReadAllBlogResponse")
	proto.RegisterType((*Comment)(nil), "v1.Comment")
	proto.RegisterType((*CreateCommentRequest)(nil), "v1.CreateCommentRequest")
	proto.RegisterType((*CreateCommentResponse)(nil), "v1.CreateCommentResponse")
	proto.RegisterType((*DeleteCommentRequest)(nil), "v1.DeleteCommentRequest")
	proto.RegisterType((*DeleteCommentResponse)(nil), "v1.DeleteCommentResponse")
	proto.RegisterType((*ReadAllCommentRequest)(nil), "v1.ReadAllCommentRequest")
	proto.RegisterType((*ReadAllCommentResponse)(nil), "v1.ReadAllCommentResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 869 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x96, 0x93, 0xec, 0x66, 0x7b, 0x42, 0xb6, 0xe9, 0x6c, 0xb2, 0xeb, 0x9a, 0xb6, 0x58, 0x96,
	0x28, 0x55, 0x44, 0xec, 0x6e, 0xba, 0x20, 0x76, 0xb9, 0xe9, 0xee, 0x56, 0x42, 0x95, 0x90, 0x40,
	0x69, 0x25, 0x2e, 0x57, 0x8e, 0x7d, 0xea, 0x4c, 0x65, 0x7b, 0x8c, 0x3d, 0x49, 0x5b, 0x55, 0xe5,
	0x82, 0x7b, 0x24, 0x04, 0x5c, 0xf1, 0x04, 0xbc, 0x0f, 0xaf, 0xc0, 0x5b, 0x70, 0x01, 0x9a, 0xf1,
	0x38, 0x3f, 0x76, 0xb2, 0x29, 0x5c, 0x25, 0x73, 0x7e, 0xbe, 0xf3, 0x9d, 0x33, 0xdf, 0x9c, 0x04,
	0xda, 0x19, 0xa6, 0x33, 0xea, 0xa1, 0x9d, 0xa4, 0x8c, 0x33, 0x52, 0x9b, 0x1d, 0x1b, 0x1f, 0x05,
	0x8c, 0x05, 0x21, 0x3a, 0xd2, 0x32, 0x9e, 0xbe, 0x70, 0x38, 0x8d, 0x30, 0xe3, 0x6e, 0x94, 0xe4,
	0x41, 0xc6, 0x1d, 0x15, 0xe0, 0x26, 0xd4, 0x71, 0xe3, 0x98, 0x71, 0x97, 0x53, 0x16, 0x67, 0xca,
	0xfb, 0xa9, 0xfc, 0xf0, 0x06, 0x01, 0xc6, 0x83, 0xec, 0x95, 0x1b, 0x04, 0x98, 0x3a, 0x2c, 0x91,
	0x11, 0xd5, 0x68, 0xeb, 0x0f, 0x0d, 0x1a, 0x17, 0x21, 0x0b, 0xc8, 0x3e, 0xd4, 0xa8, 0xaf, 0x6b,
	0xa6, 0xf6, 0xe0, 0xc6, 0xa8, 0x46, 0x7d, 0xd2, 0x85, 0x1d, 0x4e, 0x79, 0x88, 0x7a, 0x4d, 0x9a,
	0xf2, 0x03, 0x31, 0xa1, 0xe5, 0x63, 0xe6, 0xa5, 0x54, 0x02, 0xea, 0x75, 0xe9, 0x5b, 0x36, 0x91,
	0xbb, 0x00, 0x5e, 0x8a, 0x2e, 0x67, 0xe9, 0x15, 0xf5, 0xf5, 0x86, 0x0c, 0xb8, 0xa1, 0x2c, 0x4f,
	0x7d, 0x72, 0xaa, 0xdc, 0xe8, 0x5f, 0xb9, 0x5c, 0xdf, 0x31, 0xb5, 0x07, 0xad, 0xa1, 0x61, 0xe7,
	0x0d, 0xd9, 0x45, 0xc7, 0xf6, 0xf3, 0xa2, 0x63, 0x95, 0x8a, 0xfe, 0x39, 0xb7, 0x2e, 0xe1, 0xd6,
	0xa5, 0x3c, 0x08, 0xbe, 0x23, 0xfc, 0x7e, 0x8a, 0x19, 0x27, 0x1d, 0xa8, 0xbb, 0x09, 0x55, 0xbc,
	0xc5, 0x57, 0x72, 0x07, 0x1a, 0xe3, 0x90, 0x05, 0x92, 0x77, 0x6b, 0xb8, 0x67, 0xcf, 0x8e, 0x6d,
	0x99, 0x20, 0xad, 0xd6, 0xe7, 0x40, 0x96, 0x41, 0xb2, 0x84, 0xc5, 0x19, 0xae, 0x41, 0xc9, 0xc7,
	0x51, 0x2b, 0xc6, 0x61, 0x3d, 0x82, 0x9b, 0x23, 0x74, 0xfd, 0xeb, 0x4b, 0x97, 0x93, 0x9e, 0x40,
	0x67, 0x91, 0xb4, 0xb1, 0xd4, 0x3d, 0xd8, 0x11, 0xd4, 0xb2, 0x0a, 0xe3, 0xdc, 0x6c, 0x7d, 0x06,
	0xb7, 0x9e, 0x60, 0x88, 0xdb, 0xfa, 0x2e, 0x17, 0x7f, 0x0c, 0x64, 0x39, 0x6d, 0x63, 0x79, 0x1d,
	0x9a, 0xbe, 0x8c, 0xcb, 0x93, 0xeb, 0xa3, 0xe2, 0x68, 0xdd, 0x07, 0x22, 0xe8, 0x9f, 0x87, 0xe1,
	0xb5, 0x95, 0xad, 0xaf, 0xe0, 0x60, 0x25, 0xee, 0x7d, 0x3a, 0xad, 0xaf, 0xeb, 0xf4, 0x27, 0x0d,
	0x9a, 0x97, 0x2c, 0x8a, 0x30, 0xe6, 0x15, 0x3d, 0xea, 0xd0, 0xf4, 0x58, 0xcc, 0x31, 0xe6, 0xaa,
	0xc7, 0xe2, 0x58, 0x52, 0x5c, 0xfd, 0x7a, 0xc5, 0x35, 0xfe, 0x8b, 0xe2, 0xbe, 0x81, 0x6e, 0x2e,
	0x16, 0x45, 0x6a, 0xf3, 0xf0, 0x3f, 0x16, 0xec, 0x64, 0x8c, 0xba, 0xc5, 0x96, 0xe8, 0xad, 0x48,
	0x2b, 0x7c, 0xd6, 0x29, 0xf4, 0x4a, 0x80, 0xef, 0x2d, 0xc0, 0x2f, 0xa0, 0x9b, 0x5f, 0xe7, 0x56,
	0x2e, 0xe5, 0xcc, 0x4b, 0xe8, 0x95, 0x32, 0xff, 0x87, 0x16, 0x2e, 0xa0, 0xa7, 0xee, 0x78, 0x6b,
	0xfd, 0x23, 0x68, 0x8a, 0xeb, 0xbc, 0x9a, 0x93, 0xd8, 0x15, 0xc7, 0xa7, 0xbe, 0xf5, 0x0c, 0x0e,
	0xcb, 0x18, 0x1b, 0x99, 0x7c, 0x02, 0x7b, 0x6a, 0x68, 0x85, 0x5a, 0x56, 0x26, 0x3a, 0x77, 0x0e,
	0x7f, 0xde, 0x81, 0x96, 0xd0, 0xd0, 0xb3, 0x7c, 0x8f, 0x92, 0xe7, 0xd0, 0x5a, 0x12, 0x23, 0x39,
	0x14, 0x59, 0x55, 0x15, 0x1b, 0x47, 0x15, 0x7b, 0x4e, 0xc5, 0xea, 0xfe, 0xf8, 0xe7, 0x5f, 0xbf,
	0xd6, 0xf6, 0xc9, 0x07, 0xce, 0xec, 0xd8, 0x11, 0xc4, 0x1d, 0x37, 0x0c, 0xc9, 0xb7, 0x00, 0x8b,
	0xb5, 0x41, 0x7a, 0x92, 0x4a, 0x79, 0x17, 0x19, 0x87, 0x65, 0xb3, 0x82, 0x3c, 0x90, 0x90, 0x6d,
	0x6b, 0xaf, 0x80, 0x3c, 0xd3, 0xfa, 0xe4, 0x6b, 0xd8, 0x2b, 0x76, 0x03, 0x39, 0x28, 0xc8, 0x2c,
	0xa3, 0x75, 0x57, 0x8d, 0x0a, 0xab, 0x27, 0xb1, 0x6e, 0x92, 0xf6, 0x9c, 0xde, 0x5b, 0xea, 0xbf,
	0x23, 0x23, 0x80, 0xc5, 0x63, 0xcf, 0xf9, 0x55, 0x76, 0x46, 0xce, 0xaf, 0xba, 0x13, 0x0a, 0xcc,
	0x7e, 0x09, 0x93, 0xc1, 0xfe, 0xea, 0x75, 0x91, 0xdb, 0x4b, 0x43, 0x5b, 0x95, 0x81, 0x61, 0xac,
	0x73, 0x29, 0xfc, 0xfb, 0x12, 0xdf, 0x24, 0xf7, 0xe6, 0xf8, 0xea, 0xf6, 0xc4, 0x68, 0x9d, 0xb7,
	0x4a, 0x2c, 0xef, 0x88, 0x0b, 0xed, 0x95, 0xd7, 0x41, 0xf4, 0xc5, 0x40, 0x4b, 0xe5, 0x6e, 0xaf,
	0xf1, 0xa8, 0x6a, 0x1f, 0xca, 0x6a, 0x3d, 0xab, 0x53, 0xae, 0x26, 0xa6, 0xee, 0x41, 0x7b, 0xe5,
	0x2d, 0xe4, 0x25, 0xd6, 0x3d, 0xac, 0xbc, 0xc4, 0xda, 0x87, 0x63, 0xdd, 0x95, 0x25, 0x8e, 0xfa,
	0xbd, 0x4a, 0x43, 0x62, 0x70, 0x17, 0xff, 0x68, 0xbf, 0x9c, 0xff, 0xad, 0x91, 0xdf, 0x34, 0x68,
	0x7f, 0x87, 0x74, 0xcc, 0x4c, 0xf5, 0x1b, 0x6f, 0xfd, 0x00, 0x4e, 0xc0, 0x06, 0x41, 0x9a, 0x78,
	0x83, 0x09, 0xe7, 0xc9, 0x20, 0xc5, 0x8c, 0x0f, 0x22, 0xea, 0xa5, 0x4c, 0x45, 0x0c, 0xf8, 0x94,
	0xb3, 0x94, 0xba, 0xa1, 0x99, 0xa4, 0xec, 0x25, 0x7a, 0x9c, 0x9c, 0x8a, 0xc0, 0xec, 0xcc, 0x71,
	0x02, 0xca, 0x27, 0xd3, 0xb1, 0xed, 0xb1, 0xc8, 0x71, 0xe3, 0x37, 0x3e, 0x46, 0x6c, 0x0b, 0x96,
	0xd1, 0xc1, 0xd7, 0x2f, 0xc2, 0x37, 0xc1, 0xe3, 0x20, 0x72, 0x69, 0x28, 0x12, 0x87, 0xf5, 0x63,
	0xfb, 0x61, 0x5f, 0xd3, 0x86, 0x1d, 0x37, 0x49, 0x42, 0xea, 0xc9, 0x3f, 0x02, 0xce, 0xcb, 0x8c,
	0xc5, 0x67, 0x15, 0xcb, 0xe8, 0x4b, 0xa8, 0x9f, 0x3c, 0x3c, 0x21, 0x27, 0xd0, 0x1f, 0x21, 0x9f,
	0xa6, 0x31, 0xfa, 0xe6, 0xab, 0x09, 0xc6, 0x26, 0x9f, 0xa0, 0x99, 0x62, 0xc6, 0xa6, 0xa9, 0x87,
	0xa6, 0xcf, 0x30, 0x33, 0x63, 0xc6, 0x4d, 0x7c, 0x4d, 0x33, 0x6e, 0x93, 0x5d, 0x68, 0xfc, 0x5e,
	0xd3, 0x9a, 0xe3, 0x5d, 0xb9, 0x57, 0x1f, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x53, 0x80, 0x19,
	0xab, 0xde, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlogServiceClient is the client API for BlogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlogServiceClient interface {
	// Read all blog
	ReadAllBlog(ctx context.Context, in *ReadAllBlogRequest, opts ...grpc.CallOption) (*ReadAllBlogResponse, error)
	// Create new blog
	CreateBlog(ctx context.Context, in *CreateBlogRequest, opts ...grpc.CallOption) (*CreateBlogResponse, error)
	// Read blog
	ReadBlog(ctx context.Context, in *ReadBlogRequest, opts ...grpc.CallOption) (*ReadBlogResponse, error)
	// Delete blog
	DeleteBlog(ctx context.Context, in *DeleteBlogRequest, opts ...grpc.CallOption) (*DeleteBlogResponse, error)
	// Read all comment
	ReadAllComment(ctx context.Context, in *ReadAllCommentRequest, opts ...grpc.CallOption) (*ReadAllCommentResponse, error)
	// Create new comment
	CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error)
	// Delete comment
	DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error)
}

type blogServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlogServiceClient(cc *grpc.ClientConn) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) ReadAllBlog(ctx context.Context, in *ReadAllBlogRequest, opts ...grpc.CallOption) (*ReadAllBlogResponse, error) {
	out := new(ReadAllBlogResponse)
	err := c.cc.Invoke(ctx, "/v1.BlogService/ReadAllBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) CreateBlog(ctx context.Context, in *CreateBlogRequest, opts ...grpc.CallOption) (*CreateBlogResponse, error) {
	out := new(CreateBlogResponse)
	err := c.cc.Invoke(ctx, "/v1.BlogService/CreateBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ReadBlog(ctx context.Context, in *ReadBlogRequest, opts ...grpc.CallOption) (*ReadBlogResponse, error) {
	out := new(ReadBlogResponse)
	err := c.cc.Invoke(ctx, "/v1.BlogService/ReadBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) DeleteBlog(ctx context.Context, in *DeleteBlogRequest, opts ...grpc.CallOption) (*DeleteBlogResponse, error) {
	out := new(DeleteBlogResponse)
	err := c.cc.Invoke(ctx, "/v1.BlogService/DeleteBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ReadAllComment(ctx context.Context, in *ReadAllCommentRequest, opts ...grpc.CallOption) (*ReadAllCommentResponse, error) {
	out := new(ReadAllCommentResponse)
	err := c.cc.Invoke(ctx, "/v1.BlogService/ReadAllComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) CreateComment(ctx context.Context, in *CreateCommentRequest, opts ...grpc.CallOption) (*CreateCommentResponse, error) {
	out := new(CreateCommentResponse)
	err := c.cc.Invoke(ctx, "/v1.BlogService/CreateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) DeleteComment(ctx context.Context, in *DeleteCommentRequest, opts ...grpc.CallOption) (*DeleteCommentResponse, error) {
	out := new(DeleteCommentResponse)
	err := c.cc.Invoke(ctx, "/v1.BlogService/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogServiceServer is the server API for BlogService service.
type BlogServiceServer interface {
	// Read all blog
	ReadAllBlog(context.Context, *ReadAllBlogRequest) (*ReadAllBlogResponse, error)
	// Create new blog
	CreateBlog(context.Context, *CreateBlogRequest) (*CreateBlogResponse, error)
	// Read blog
	ReadBlog(context.Context, *ReadBlogRequest) (*ReadBlogResponse, error)
	// Delete blog
	DeleteBlog(context.Context, *DeleteBlogRequest) (*DeleteBlogResponse, error)
	// Read all comment
	ReadAllComment(context.Context, *ReadAllCommentRequest) (*ReadAllCommentResponse, error)
	// Create new comment
	CreateComment(context.Context, *CreateCommentRequest) (*CreateCommentResponse, error)
	// Delete comment
	DeleteComment(context.Context, *DeleteCommentRequest) (*DeleteCommentResponse, error)
}

func RegisterBlogServiceServer(s *grpc.Server, srv BlogServiceServer) {
	s.RegisterService(&_BlogService_serviceDesc, srv)
}

func _BlogService_ReadAllBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ReadAllBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BlogService/ReadAllBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ReadAllBlog(ctx, req.(*ReadAllBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_CreateBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).CreateBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BlogService/CreateBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).CreateBlog(ctx, req.(*CreateBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ReadBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ReadBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BlogService/ReadBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ReadBlog(ctx, req.(*ReadBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_DeleteBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).DeleteBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BlogService/DeleteBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).DeleteBlog(ctx, req.(*DeleteBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ReadAllComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ReadAllComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BlogService/ReadAllComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ReadAllComment(ctx, req.(*ReadAllCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BlogService/CreateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).CreateComment(ctx, req.(*CreateCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.BlogService/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).DeleteComment(ctx, req.(*DeleteCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadAllBlog",
			Handler:    _BlogService_ReadAllBlog_Handler,
		},
		{
			MethodName: "CreateBlog",
			Handler:    _BlogService_CreateBlog_Handler,
		},
		{
			MethodName: "ReadBlog",
			Handler:    _BlogService_ReadBlog_Handler,
		},
		{
			MethodName: "DeleteBlog",
			Handler:    _BlogService_DeleteBlog_Handler,
		},
		{
			MethodName: "ReadAllComment",
			Handler:    _BlogService_ReadAllComment_Handler,
		},
		{
			MethodName: "CreateComment",
			Handler:    _BlogService_CreateComment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _BlogService_DeleteComment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
